{"version":3,"sources":["appContext.js","components/LandingPage.js","components/Tutor.js","components/VideoItem.js","components/VideoList.js","components/Home.js","components/VideoDetail.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","AppContextProvider","children","useState","name","setName","id","description","sources","subtitle","thumb","title","videos","useEffect","console","log","Provider","value","responseGoogle","response","profileObj","LandingPage","useContext","to","clientId","onSuccess","onFailure","cookiePolicy","buttonText","Tutor","file","state","setState","handleChange","e","target","prev","handleSubmit","a","preventDefault","formData","FormData","append","axios","post","res","data","onSubmit","type","onChange","persist","files","VideoItem","video","className","pathname","selectedVideo","src","alt","VideoList","map","key","Home","VideoDetail","location","url","playing","controls","width","height","App","exact","path","component","props","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32e23b8a.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\nconst AppContext = createContext();\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  const videoArray = [\r\n    {\r\n      id: 1,\r\n      description:\r\n        \"Big Buck Bunny tells the story of a giant rabbit with a heart bigger than himself. When one sunny day three rodents rudely harass him, something snaps... and the rabbit ain't no bunny anymore! In the typical cartoon tradition he prepares the nasty rodents a comical revenge.\\n\\nLicensed under the Creative Commons Attribution license\\nhttp://www.bigbuckbunny.org\",\r\n      sources: [\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\r\n      ],\r\n      subtitle: \"By Blender Foundation\",\r\n      thumb:\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg\",\r\n      title: \"Big Buck Bunny\",\r\n    },\r\n    {\r\n      id: 2,\r\n      description: \"The first Blender Open Movie from 2006\",\r\n      sources: [\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4\",\r\n      ],\r\n      subtitle: \"By Blender Foundation\",\r\n      thumb:\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/ElephantsDream.jpg\",\r\n      title: \"Elephant Dream\",\r\n    },\r\n    {\r\n      id: 3,\r\n      description:\r\n        \"HBO GO now works with Chromecast -- the easiest way to enjoy online video on your TV. For when you want to settle into your Iron Throne to watch the latest episodes. For $35.\\nLearn how to use Chromecast with HBO GO and more at google.com/chromecast.\",\r\n      sources: [\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4\",\r\n      ],\r\n      subtitle: \"By Google\",\r\n      thumb:\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/ForBiggerBlazes.jpg\",\r\n      title: \"For Bigger Blazes\",\r\n    },\r\n    {\r\n      id: 4,\r\n      description:\r\n        \"Introducing Chromecast. The easiest way to enjoy online video and music on your TV—for when Batman's escapes aren't quite big enough. For $35. Learn how to use Chromecast with Google Play Movies and more at google.com/chromecast.\",\r\n      sources: [\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4\",\r\n      ],\r\n      subtitle: \"By Google\",\r\n      thumb:\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/ForBiggerEscapes.jpg\",\r\n      title: \"For Bigger Escape\",\r\n    },\r\n    {\r\n      id: 5,\r\n      description:\r\n        \"Introducing Chromecast. The easiest way to enjoy online video and music on your TV. For $35.  Find out more at google.com/chromecast.\",\r\n      sources: [\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4\",\r\n      ],\r\n      subtitle: \"By Google\",\r\n      thumb:\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/ForBiggerFun.jpg\",\r\n      title: \"For Bigger Fun\",\r\n    },\r\n    {\r\n      id: 6, \r\n      description:\r\n        \"Introducing Chromecast. The easiest way to enjoy online video and music on your TV—for the times that call for bigger joyrides. For $35. Learn how to use Chromecast with YouTube and more at google.com/chromecast.\",\r\n      sources: [\r\n        \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4\",\r\n      ],\r\n      subtitle: \"By Google\",\r\n      thumb: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/ForBiggerJoyrides.jpg\",\r\n      title: \"For Bigger Joyrides\",\r\n    },\r\n  ];\r\n  const [name, setName] = useState(\"\");\r\n  const [videos, setVideos] = useState(videoArray);\r\n  // const [selectedVideo, setSelectedVideo] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log(\"APP CONTEXT\");\r\n    // console.log('SELECTED VIDEO', selectedVideo)\r\n  }, []);\r\n\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n    if (responseGoogle) {\r\n      setName(response.profileObj.name);\r\n    }\r\n  };\r\n\r\n  // const playVideo = (video) => {\r\n  //   setSelectedVideo(video)\r\n  // }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ name, responseGoogle, videos }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContextProvider, AppContext };\r\n","import React, { useContext } from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {AppContext} from '../appContext';\r\n\r\nconst LandingPage = () => {\r\n\r\n  const CLIENT_ID =\r\n    \"708483733729-napcqivj73qrqm83b2akhu3dmq26h9bj.apps.googleusercontent.com\";\r\n\r\n  const {name, responseGoogle} = useContext(AppContext);\r\n\r\n  if(name) {\r\n    return <Redirect to='/home' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log('HOME')}\r\n      <h1>Welcome</h1>\r\n      <h3>Login with Google</h3>\r\n      <GoogleLogin\r\n        clientId={CLIENT_ID}\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={\"single_host_origin\"}\r\n        buttonText=\"Login\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../appContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nconst Tutor = () => {\r\n  const { name } = useContext(AppContext);\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    file: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      console.log(name, value);\r\n      setState((prev) => {\r\n        return {\r\n          ...prev,\r\n          [name]: value,\r\n        };\r\n      });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    e.persist();\r\n    setState((prev) => {\r\n      return {\r\n        ...prev, file: e.target.files[0]\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('SUBMIT')\r\n    const formData = new FormData();\r\n\r\n    formData.append('title', state.title);\r\n    formData.append('description', state.description);\r\n    formData.append('stuff', state.file);\r\n\r\n    try {\r\n    const res = await axios.post('/upload', formData);\r\n    console.log(res.data)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  };\r\n\r\n  if (!name) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Welcome Tutor</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={state.title}\r\n          name=\"title\"\r\n          onChange={handleChange}\r\n        />\r\n        <textarea\r\n          value={state.description}\r\n          onChange={handleChange}\r\n          name=\"description\"\r\n        />\r\n        <input type=\"file\" name=\"myVideo\" onChange={handleFileChange} />\r\n        <input type=\"submit\" value=\"Upload\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutor;\r\n","import React, {useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst VideoItem = ({video}) => {\r\n\r\n  return (\r\n      <div className=\"gallery\">\r\n        {/* <Link to='/detail' onClick={() => playVideo(video)}> */}\r\n        <Link to={{\r\n          pathname: '/detail',\r\n          state: {\r\n            selectedVideo: video\r\n          }\r\n        }} >\r\n          <img src={video.thumb} alt=\"\" />\r\n        </Link>\r\n  <div className=\"desc\">{video.title}</div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React, {useContext} from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\nimport {AppContext} from '../appContext';\r\n\r\nconst VideoList = () => {\r\n  const { videos } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <div className=\"gallery-container\">\r\n      {videos.map(video => <VideoItem video={video} key={video.id} /> )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\nimport VideoList from \"./VideoList\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <VideoList />\r\n    </div>\r\n  );\r\n};\r\n\r\n// const Home = () => <VideoList />\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst VideoDetail = ({ location }) => {\r\n  const video = location.state.selectedVideo;\r\n  const [url] = location.state.selectedVideo.sources;\r\n  // console.log(selectedVideo.sources[0])\r\n  return (\r\n    <div className=\"video-container\">\r\n      <div className='video-player'>\r\n        <ReactPlayer url={url} playing={false} controls={true} width='100%' height='auto'/>\r\n        <div className=\"desc\">{video.title}</div>\r\n        <div className=\"desc\">{video.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\";\nimport Tutor from \"./components/Tutor\";\nimport Home from \"./components/Home\";\nimport VideoDetail from \"./components/VideoDetail\";\nimport { AppContextProvider } from \"./appContext\";\n// import GoogleLogin from \"react-google-login\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={(props) => <LandingPage />} />\n          <Route exact path=\"/tutor\" component={(props) => <Tutor />} />\n          <Route exact path=\"/home\" component={(props) => <Home />} />\n          <Route exact path=\"/detail\" component={(props) => <VideoDetail {...props} />} />\n        </Switch>\n      </div>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import App from '/TestApp';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//     <Router>\n//       <App />\n//     </Router>,\n//   document.getElementById(\"root\")\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}